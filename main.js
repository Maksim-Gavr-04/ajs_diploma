(()=>{"use strict";function e(e,t,s){if(t>=s**2)throw new Error("Unknown character cell index");const a=Math.trunc(t/s),i=t%s,l=[];for(let t=1;t<=e;t++){const e=a-t,s=a+t,n=i-t,o=i+t;e>=0&&l.push(8*e+i),s<=7&&l.push(8*s+i),n>=0&&l.push(8*a+n),o<=7&&l.push(8*a+o),e>=0&&n>=0&&l.push(8*e+n),e>=0&&o<=7&&l.push(8*e+o),s<=7&&n>=0&&l.push(8*s+n),s<=7&&o<=7&&l.push(8*s+o)}return l}class t{constructor(){this.boardSize=8,this.container=null,this.boardEl=null,this.cells=[],this.cellClickListeners=[],this.cellEnterListeners=[],this.cellLeaveListeners=[],this.newGameListeners=[],this.saveGameListeners=[],this.loadGameListeners=[]}bindToDOM(e){if(!(e instanceof HTMLElement))throw new Error("container is not HTMLElement");this.container=e}drawUi(e){this.checkBinding(),this.container.innerHTML='\n      <div class="controls">\n        <button data-id="action-restart" class="btn">New Game</button>\n        <button data-id="action-save" class="btn">Save Game</button>\n        <button data-id="action-load" class="btn">Load Game</button>\n      </div>\n      <div class="board-container">\n        <div data-id="board" class="board"></div>\n      </div>\n    ',this.newGameEl=this.container.querySelector("[data-id=action-restart]"),this.saveGameEl=this.container.querySelector("[data-id=action-save]"),this.loadGameEl=this.container.querySelector("[data-id=action-load]"),this.newGameEl.addEventListener("click",(e=>this.onNewGameClick(e))),this.saveGameEl.addEventListener("click",(e=>this.onSaveGameClick(e))),this.loadGameEl.addEventListener("click",(e=>this.onLoadGameClick(e))),this.boardEl=this.container.querySelector("[data-id=board]"),this.boardEl.classList.add(e);for(let e=0;e<this.boardSize**2;e+=1){const a=document.createElement("div");a.classList.add("cell","map-tile","map-tile-"+(t=e,s=this.boardSize,0===t?"top-left":t===s-1?"top-right":t<s-1?"top":t===(s-1)*s?"bottom-left":t===s*s-1?"bottom-right":t>(s-1)*s?"bottom":t%s==0?"left":(t+1)%s==0?"right":"center")),a.addEventListener("mouseenter",(e=>this.onCellEnter(e))),a.addEventListener("mouseleave",(e=>this.onCellLeave(e))),a.addEventListener("click",(e=>this.onCellClick(e))),this.boardEl.appendChild(a)}var t,s;this.cells=Array.from(this.boardEl.children)}redrawPositions(e){for(const e of this.cells)e.innerHTML="";for(const s of e){const e=this.boardEl.children[s.position],a=document.createElement("div");a.classList.add("character",s.character.type);const i=document.createElement("div");i.classList.add("health-level");const l=document.createElement("div");l.classList.add("health-level-indicator","health-level-indicator-"+((t=s.character.health)<15?"critical":t<50?"normal":"high")),l.style.width=`${s.character.health}%`,i.appendChild(l),a.appendChild(i),e.appendChild(a)}var t}addCellEnterListener(e){this.cellEnterListeners.push(e)}addCellLeaveListener(e){this.cellLeaveListeners.push(e)}addCellClickListener(e){this.cellClickListeners.push(e)}addNewGameListener(e){this.newGameListeners.push(e)}addSaveGameListener(e){this.saveGameListeners.push(e)}addLoadGameListener(e){this.loadGameListeners.push(e)}onCellEnter(e){e.preventDefault();const t=this.cells.indexOf(e.currentTarget);this.cellEnterListeners.forEach((e=>e.call(null,t)))}onCellLeave(e){e.preventDefault();const t=this.cells.indexOf(e.currentTarget);this.cellLeaveListeners.forEach((e=>e.call(null,t)))}onCellClick(e){const t=this.cells.indexOf(e.currentTarget);this.cellClickListeners.forEach((e=>e.call(null,t)))}onNewGameClick(e){e.preventDefault(),this.newGameListeners.forEach((e=>e.call(null)))}onSaveGameClick(e){e.preventDefault(),this.saveGameListeners.forEach((e=>e.call(null)))}onLoadGameClick(e){e.preventDefault(),this.loadGameListeners.forEach((e=>e.call(null)))}static showError(e){alert(e)}static showMessage(e){alert(e)}selectCell(e,t="yellow"){this.deselectCell(e),this.cells[e].classList.add("selected",`selected-${t}`)}deselectCell(e){const t=this.cells[e];t.classList.remove(...Array.from(t.classList).filter((e=>e.startsWith("selected"))))}showCellTooltip(e,t){this.cells[t].title=e}hideCellTooltip(e){this.cells[e].title=""}showDamage(e,t){return new Promise((s=>{const a=this.cells[e],i=document.createElement("span");i.textContent=t,i.classList.add("damage"),a.appendChild(i),i.addEventListener("animationend",(()=>{a.removeChild(i),s()}))}))}setCursor(e){this.boardEl.style.cursor=e}checkBinding(){if(null===this.container)throw new Error("GamePlay not bind to DOM")}}class s{constructor(e){if(this.level=e,this.attack=0,this.defence=0,this.health=50,"Character"===new.target.name)throw new Error("Creating instances of the `Character` class is prohibited")}levelUp(){this.level++,this.attack=Math.trunc(Math.max(this.attack,this.attack*(80+this.health)/100)),this.defence=Math.trunc(Math.max(this.defence,this.defence*(80+this.health)/100)),this.health+=80,this.health>100&&(this.health=100)}}class a extends s{constructor(e){super(e),this.attack=25,this.defence=25,this.health=100,this.movementDistance=2,this.attackDistance=2,this.type="bowman"}}class i extends s{constructor(e){super(e),this.attack=40,this.defence=10,this.health=100,this.movementDistance=4,this.attackDistance=1,this.type="swordsman"}}class l extends s{constructor(e){super(e),this.attack=10,this.defence=40,this.health=100,this.movementDistance=1,this.attackDistance=4,this.type="magician"}}class n extends s{constructor(e){super(e),this.attack=25,this.defence=25,this.health=100,this.movementDistance=2,this.attackDistance=2,this.type="vampire"}}class o extends s{constructor(e){super(e),this.attack=40,this.defence=10,this.health=100,this.movementDistance=4,this.attackDistance=1,this.type="undead"}}class h extends s{constructor(e){super(e),this.attack=10,this.defence=10,this.health=100,this.movementDistance=1,this.attackDistance=4,this.type="daemon"}}class r{constructor(){this.level=1,this.selectedCell=null,this.maxPoints=0}static from(e){return"object"==typeof e?e:null}}class c{constructor(e,t){if(!(e instanceof s))throw new Error("Character must be instance of Character or its children");if("number"!=typeof t)throw new Error("Position must be a number");this.character=e,this.position=t}}function p(e,t,s){const a=[];if("players"===s)a.push(...(e=>{const t=[];for(let s=0;s<e**2;s+=e)t.push(s),t.push(s+1);return t})(t));else{if("opponents"!==s)throw new Error("Parameter `playerOrOpponent` should be either the string `players` or `opponents`");a.push(...(e=>{const t=[];for(let s=e-1;s<e**2;s+=e)t.push(s),t.push(s-1);return t})(t))}const i=[];return e.forEach((e=>{const t=Math.floor(Math.random()*a.length);i.push(new c(e,a[t])),a.splice(t,1)})),i}class m{constructor(){this.members=new Set}add(e){this.members.add(e)}toArray(){return[...this.members]}}function d(e,t,s){const a=new m,i=function*(e,t){for(;;){const s=e[Math.floor(Math.random()*e.length)],a=Math.floor(Math.random()*t)+1;yield new s(a)}}(e,t);for(let e=0;e<s;e++){const e=i.next().value;a.add(e)}return a.toArray()}const f="auto",y="pointer",u="crosshair",C="not-allowed",g={1:"prairie",2:"desert",3:"arctic",4:"mountain"},O=new t;O.bindToDOM(document.querySelector("#game-container"));const v=new class{constructor(e){this.storage=e}save(e){this.storage.setItem("state",JSON.stringify(e))}load(){try{return JSON.parse(this.storage.getItem("state"))}catch(e){throw new Error("Invalid state")}}}(localStorage),T=new class{constructor(e,t){this.gamePlay=e,this.gameState=new r,this.stateService=t,this.isBoardBlocked=!1,this.pointsStatistics=[],this.playersTypes=[a,i,l],this.opponentsTypes=[a,n,o,h],this.playersTeam=d(this.playersTypes,1,2),this.opponentsTeam=d(this.opponentsTypes,1,2),this.positionsOfPlayersTeam=p(this.playersTeam,this.gamePlay.boardSize,"players"),this.positionsOfOpponentsTeam=p(this.opponentsTeam,this.gamePlay.boardSize,"opponents")}init(){this.gamePlay.drawUi(g[this.gameState.level]),this.gamePlay.redrawPositions([...this.positionsOfPlayersTeam,...this.positionsOfOpponentsTeam]),this.gamePlay.addCellClickListener(this.onCellClick.bind(this)),this.gamePlay.addCellEnterListener(this.onCellEnter.bind(this)),this.gamePlay.addCellLeaveListener(this.onCellLeave.bind(this)),this.gamePlay.addNewGameListener(this.onNewGameClick.bind(this)),this.gamePlay.addSaveGameListener(this.onSaveGameClick.bind(this)),this.gamePlay.addLoadGameListener(this.onLoadGameClick.bind(this))}onCellClick(e){if(!this.isBoardBlocked&&(null===this.gameState.selectedCell&&this.isOpponent(e)&&t.showError("Вы не можете выбрать противника!"),this.characterOnCell(e)&&this.isPlayer(e)&&(null!==this.gameState.selectedCell&&this.gamePlay.deselectCell(this.gameState.selectedCell),this.gamePlay.selectCell(e),this.gameState.selectedCell=e),null!==this.gameState.selectedCell)&&(this.isPlayer(e)||this.isCellForMovement(e)||this.isCellForAttack(e)||t.showError("Недопустимый действие!"),this.characterOnCell(e)||this.isCellForMovement(e)||!this.isCellForAttack(e)||t.showError("Недопустимый действие!"),this.isOpponent(e)&&this.isCellForMovement(e)&&!this.isCellForAttack(e)&&t.showError("Недопустимый действие!"),!this.characterOnCell(e)&&this.isCellForMovement(e)&&([...this.positionsOfPlayersTeam].find((e=>e.position===this.gameState.selectedCell)).position=e,this.gamePlay.deselectCell(this.gameState.selectedCell),this.gameState.selectedCell=e,this.gamePlay.selectCell(this.gameState.selectedCell),this.gamePlay.redrawPositions([...this.positionsOfPlayersTeam,...this.positionsOfOpponentsTeam]),this.opponentAttackOrMovement()),this.isOpponent(e)&&this.isCellForAttack(e))){const t=this.characterOnCell(this.gameState.selectedCell).character,s=this.characterOnCell(e).character,a=Math.max(t.attack-s.defence,.1*t.attack);(async()=>{await this.gamePlay.showDamage(e,a);const t=[...this.positionsOfOpponentsTeam].findIndex((t=>t.position===e)),s=this.positionsOfOpponentsTeam[t];s.character.health-=a,s.character.health<=0&&(this.gamePlay.deselectCell(s.position),this.opponentsTeam.splice(t,1),this.positionsOfOpponentsTeam.splice(t,1)),this.gamePlay.redrawPositions([...this.positionsOfPlayersTeam,...this.positionsOfOpponentsTeam]),this.opponentAttackOrMovement(),this.completionLevelOrGame()})()}}onCellEnter(e){if(!this.isBoardBlocked){if(this.characterOnCell(e)){this.gamePlay.setCursor(y);const s=`🎖${(t=this.characterOnCell(e).character).level} ⚔${t.attack} 🛡${t.defence} ❤${t.health}`;this.gamePlay.showCellTooltip(s,e)}var t;null!==this.gameState.selectedCell&&((this.isPlayer(e)||this.isCellForMovement(e)||this.isCellForAttack(e))&&(this.characterOnCell(e)||this.isCellForMovement(e)||!this.isCellForAttack(e))?this.isOpponent(e)&&this.isCellForMovement(e)&&!this.isCellForAttack(e)?this.gamePlay.setCursor(C):!this.characterOnCell(e)&&this.isCellForMovement(e)?(this.gamePlay.setCursor(y),this.gamePlay.selectCell(e,"green")):this.isOpponent(e)&&this.isCellForAttack(e)&&(this.gamePlay.setCursor(u),this.gamePlay.selectCell(e,"red")):this.gamePlay.setCursor(C))}}onCellLeave(e){this.gamePlay.setCursor(f),this.gamePlay.hideCellTooltip(e),e!==this.gameState.selectedCell&&this.gamePlay.deselectCell(e)}onNewGameClick(){this.gameState.level=1,this.gameState.selectedCell=null,this.isBoardBlocked=!1,this.gameState.maxPoints=Math.max(...this.pointsStatistics)===-1/0?0:Math.max(...this.pointsStatistics),this.pointsStatistics=[],this.playersTeam=d(this.playersTypes,1,2),this.opponentsTeam=d(this.opponentsTypes,1,2),this.positionsOfPlayersTeam=p(this.playersTeam,this.gamePlay.boardSize,"players"),this.positionsOfOpponentsTeam=p(this.opponentsTeam,this.gamePlay.boardSize,"opponents"),this.gamePlay.drawUi(g[this.gameState.level]),this.gamePlay.redrawPositions([...this.positionsOfPlayersTeam,...this.positionsOfOpponentsTeam]),t.showMessage("Новая игра!")}onSaveGameClick(){if(this.isBoardBlocked)return;const e={level:this.gameState.level,selectedCell:this.gameState.selectedCell,pointsStatistics:this.pointsStatistics,playersTeam:this.playersTeam,opponentsTeam:this.opponentsTeam,positionsOfPlayersTeam:this.positionsOfPlayersTeam,positionsOfOpponentsTeam:this.positionsOfOpponentsTeam};this.stateService.save(r.from(e)),t.showMessage("Игра успешно сохранена!")}onLoadGameClick(){this.isBoardBlocked=!1,this.playersTeam=[],this.opponentsTeam=[],this.positionsOfPlayersTeam=[],this.positionsOfOpponentsTeam=[];try{const e=this.stateService.load();this.gameState.level=e.level,this.gameState.selectedCell=e.selectedCell,this.pointsStatistics=e.pointsStatistics,e.positionsOfPlayersTeam.forEach((e=>{let t=null;"bowman"===e.character.type?(t=new a(e.character.level),this.playersTeam.push(t)):"swordsman"===e.character.type?(t=new i(e.character.level),this.playersTeam.push(t)):"magician"===e.character.type&&(t=new l(e.character.level),this.playersTeam.push(t)),t.attack=e.character.attack,t.defence=e.character.defence,t.health=e.character.health,this.positionsOfPlayersTeam.push(new c(t,e.position))})),e.positionsOfOpponentsTeam.forEach((e=>{let t=null;"vampire"===e.character.type?(t=new n(e.character.level),this.opponentsTeam.push(t)):"undead"===e.character.type?(t=new o(e.character.level),this.opponentsTeam.push(t)):"daemon"===e.character.type?(t=new h(e.character.level),this.opponentsTeam.push(t)):"bowman"===e.character.type&&(t=new a(e.character.level),this.opponentsTeam.push(t)),t.attack=e.character.attack,t.defence=e.character.defence,t.health=e.character.health,this.positionsOfOpponentsTeam.push(new c(t,e.position))})),this.gamePlay.drawUi(g[this.gameState.level]),this.gamePlay.redrawPositions([...this.positionsOfPlayersTeam,...this.positionsOfOpponentsTeam]),this.gamePlay.selectCell(this.gameState.selectedCell),t.showMessage("Игра загружена!")}catch(e){t.showMessage("Игру загрузить не удаётся :("),console.log(e)}}opponentAttackOrMovement(t=!0){if(0===this.positionsOfPlayersTeam||0===this.positionsOfOpponentsTeam.length)return;let s=null,a=null;for(const t of[...this.positionsOfOpponentsTeam]){const i=e(t.character.attackDistance,t.position,this.gamePlay.boardSize);[...this.positionsOfPlayersTeam].forEach((e=>{i.includes(e.position)&&(s=t,a=e)}))}const i=[...this.positionsOfPlayersTeam,...this.positionsOfOpponentsTeam];if(!a&&t){const t=Math.floor(Math.random()*[...this.positionsOfOpponentsTeam].length);s=[...this.positionsOfOpponentsTeam][t];const a=e(s.character.movementDistance,s.position,this.gamePlay.boardSize);for(const e of a)i.forEach((t=>{e===t.position&&a.splice(a.indexOf(t.position),1)}));this.gamePlay.deselectCell(s.position);const l=a[Math.floor(Math.random()*a.length)];this.positionsOfOpponentsTeam[t].position=l,this.gamePlay.redrawPositions([...this.positionsOfPlayersTeam,...this.positionsOfOpponentsTeam])}else if(a){const e=Math.max(s.character.attack-a.character.defence,.1*s.character.attack);(async()=>{await this.gamePlay.showDamage(a.position,e),a.character.health-=e,a.character.health<=0&&(a.position===this.gameState.selectedCell&&(this.gamePlay.deselectCell(s.position),this.gamePlay.deselectCell(this.gameState.selectedCell),this.gameState.selectedCell=null),this.playersTeam.splice(this.playersTeam.indexOf(a.character),1),this.positionsOfPlayersTeam.splice(this.positionsOfPlayersTeam.indexOf(a),1)),this.gamePlay.redrawPositions([...this.positionsOfPlayersTeam,...this.positionsOfOpponentsTeam]),this.completionLevelOrGame()})()}}completionLevelOrGame(){if(0===this.positionsOfOpponentsTeam.length){this.gamePlay.deselectCell(this.gameState.selectedCell),this.gameState.selectedCell=null;const e=this.pointsForCompletedLevel();if(this.pointsStatistics.push(e),this.gameState.level<4){this.gameState.level++,this.playersTeam.forEach((e=>e.levelUp()));const s=[...this.playersTeam];this.playersTeam=[...d(this.playersTypes,this.gameState.level,1),...s],this.opponentsTeam=d(this.opponentsTypes,this.gameState.level,this.playersTeam.length),this.positionsOfPlayersTeam=p(this.playersTeam,this.gamePlay.boardSize,"players"),this.positionsOfOpponentsTeam=p(this.opponentsTeam,this.gamePlay.boardSize,"opponents"),this.gamePlay.drawUi(g[this.gameState.level]),this.gamePlay.redrawPositions([...this.positionsOfPlayersTeam,...this.positionsOfOpponentsTeam]),t.showMessage(`Новый ${this.gameState.level} уровень игры!\nКоличество баллов за пройденный ${this.gameState.level-1} уровень: ${e}`)}else 4===this.gameState.level&&(this.isBoardBlocked=!0,t.showMessage(`ПОБЕДА!\nКоличество баллов за пройденный ${this.gameState.level} уровень: ${e}\nМаксимальное количество баллов: ${Math.max(...this.pointsStatistics)}\nИтоговое количество баллов: ${this.pointsStatistics.reduce(((e,t)=>e+t),0)}`))}else if(0===this.positionsOfPlayersTeam.length){this.isBoardBlocked=!0;const e=Math.max(...this.pointsStatistics)===-1/0?0:Math.max(...this.pointsStatistics);t.showMessage(`ПОРАЖЕНИЕ!\nМаксимальное количество баллов: ${e}\nИтоговое количество баллов: ${this.pointsStatistics.reduce(((e,t)=>e+t),0)}`)}}pointsForCompletedLevel(){return this.positionsOfPlayersTeam.reduce(((e,t)=>e+t.character.health),0)}characterOnCell(e){return[...this.positionsOfPlayersTeam,...this.positionsOfOpponentsTeam].find((t=>t.position===e))}isPlayer(e){return[...this.positionsOfPlayersTeam].some((t=>t.position===e))}isOpponent(e){return[...this.positionsOfOpponentsTeam].some((t=>t.position===e))}isCellForMovement(t){return null!==this.gameState.selectedCell&&e(this.characterOnCell(this.gameState.selectedCell).character.movementDistance,this.gameState.selectedCell,this.gamePlay.boardSize).includes(t)}isCellForAttack(t){return null!==this.gameState.selectedCell&&e(this.characterOnCell(this.gameState.selectedCell).character.attackDistance,this.gameState.selectedCell,this.gamePlay.boardSize).includes(t)}}(O,v);T.init()})();